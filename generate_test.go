package pkgen

import (
	"os"
	"path/filepath"
	"testing"
	"text/template"

	"github.com/stretchr/testify/require"
	"golang.org/x/tools/go/packages"
)

const templateStr = `// Code generated by pkgen; DO NOT EDIT.
package {{ .Name }}

const PackagePath = "{{ .PkgPath }}"
`

const expectedGenerated = `// Code generated by pkgen; DO NOT EDIT.
package abc

const PackagePath = "def"
`

func TestGenerate(t *testing.T) {
	tmpDir := t.TempDir()
	t.Chdir(tmpDir)

	pkg := &packages.Package{Name: "abc", PkgPath: "def", GoFiles: []string{filepath.Join(tmpDir, "random.go")}}
	tmp, err := template.New("abc").Parse(templateStr)
	require.NoError(t, err)
	cnf := GenerateConfig{}
	err = GenerateInPackage(t.Context(), pkg, tmp, cnf)
	require.NoError(t, err)

	// read and evaluate the generated file
	got, gotErr := os.ReadFile(filepath.Join(tmpDir, "zz_generated.abc.go"))
	require.NoError(t, gotErr)
	require.Equal(t, expectedGenerated, string(got))
}
